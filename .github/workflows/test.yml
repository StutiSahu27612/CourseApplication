name: Java CI with Maven

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn -B clean verify

    - name: Generate Code Coverage Report
      run: mvn -B jacoco:report

    - name: Extract Code Coverage Information
      id: coverage
      run: |
        COVERAGE=$(sed -n 's/.*Overall coverage rate \([^%]*\)\%.*/\1/p' target/site/jacoco/index.html)
        echo "::set-output name=coverage::$COVERAGE"

    - name: Get owner name
      id: get_owner
      run: echo "::set-env name=owner::$(jq -r '.repository.owner.login' $GITHUB_EVENT_PATH)"

    - name: Comment Code Coverage on Pull Request
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const coverage = '${{ steps.coverage.outputs.coverage }}';
            console.log('Coverage:', coverage);

            const owner = '${{ env.owner }}';
            console.log('Owner:', owner);

            const repo = context.payload.repository?.name;
            console.log('Repository:', repo);

            const prNumber = context.payload.pull_request?.number;
            console.log('Pull Request Number:', prNumber);

            if (owner && repo && prNumber) {
              const comment = `Owner: ${owner}\nCode Coverage: ${coverage}%`;

              // Attempting to use github REST API to create a comment
              const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/issues/${prNumber}/comments`, {
                method: 'POST',
                headers: {
                  'Authorization': `token ${process.env.GITHUB_TOKEN}`,
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({ body: comment })
              });

              if (!response.ok) {
                console.error('Failed to post comment:', response.statusText);
              }
            } else {
              console.error('One or more necessary information is missing. Unable to create comment.');
            }
          } catch (error) {
            console.error('Error occurred while commenting on pull request:', error.message);
          }
