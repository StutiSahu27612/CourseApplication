name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Make Maven Wrapper Executable
        run: chmod +x mvnw

      - name: Build and run tests
        run: |
          ./mvnw clean install
          ./mvnw jacoco:prepare-agent test jacoco:report

      - name: Archive JaCoCo report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco

  analyze:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download JaCoCo report
        uses: actions/download-artifact@v2
        with:
          name: jacoco-report
          path: jacoco-report

      - name: Calculate Total Code Coverage
        id: calculate_coverage
        run: |
          total_coverage=$(grep -Po "(?<=<td class=\"ctr2\">)[0-9]+(?=%<\/td>)" jacoco-report/index.html | awk '{s+=$1} END {print s/NR}')
          echo "Total Code Coverage: $total_coverage%"
        shell: bash

      - name: Set GitHub Check
        id: code-coverage
        uses: actions/github-script@v5
        with:
          script: |
            const coverage = process.env.total_coverage;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const prResponse = await github.graphql(`
              query {
                repository(owner: "${owner}", name: "${repo}") {
                  pullRequests(headRefName: "main", first: 1, states: OPEN) {
                    nodes {
                      number
                    }
                  }
                }
              }
            `);

            const prNumber = prResponse?.repository?.pullRequests?.nodes[0]?.number;

            if (prNumber !== undefined) {
              github.checks.create({
                owner,
                repo,
                name: 'Code Coverage',
                head_sha: github.context.sha,
                status: 'completed',
                conclusion: coverage >= 10 ? 'success' : 'failure',
                output: {
                  title: 'Code Coverage',
                  summary: `Total Code Coverage: ${coverage}%`,
                },
              });
            } else {
              console.error('Unable to determine pull request number from GraphQL response.');
            }
        env:
          total_coverage: ${{ steps.calculate_coverage.outputs.total_coverage }}
