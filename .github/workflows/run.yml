name: PR Decoration

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
          
      - name: Build with Maven
        run: mvn -B clean verify

      - name: Generate JaCoCo Report
        run: mvn jacoco:report

      - name: Extract Coverage Percentage
        id: extract-coverage
        run: |
          # Use grep and awk to extract coverage percentage from Jacoco XML report
          COVERAGE_PERCENTAGE=$(grep -A1 '<counter type="LINE">' target/site/jacoco/jacoco.xml | grep "covered" | awk '{print $3}')
          echo "Coverage Percentage: $COVERAGE_PERCENTAGE"
          echo "::set-output name=coverage_percentage::$COVERAGE_PERCENTAGE"

      - name: Check Coverage Threshold
        if: success()  # Only execute if previous steps were successful
        run: |
          COVERAGE_THRESHOLD=10  # Adjust threshold as needed
          COVERAGE_PERCENTAGE=${{ steps.extract-coverage.outputs.coverage_percentage }}
          if (( $(echo "$COVERAGE_PERCENTAGE < $COVERAGE_THRESHOLD" | bc) )); then
            echo "Coverage below threshold. PR needs improvement."
            PR_STATUS="failure"
            COMMENT=":x: Code coverage is below the acceptable threshold of $COVERAGE_THRESHOLD%."
          else
            echo "Coverage meets threshold. Good job!"
            PR_STATUS="success"
            COMMENT=":white_check_mark: Code coverage meets the acceptable threshold of $COVERAGE_THRESHOLD%."
          fi
          echo "::set-output name=pr_status::$PR_STATUS"
          echo "::set-output name=comment::$COMMENT"

      - name: Set PR Status Check
        if: always()  # Always execute to update PR status
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prStatusCheck = "${{ steps.check-coverage.outputs.pr_status }}";
            const prContext = "Code Coverage";
            const description = prStatusCheck === "success" ? "Code coverage meets threshold" : "Code coverage below threshold";
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: prStatusCheck,
              context: prContext,
              description: description
            });

      - name: Add PR Comment
        if: always()  # Always execute to add PR comment
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = "${{ steps.check-coverage.outputs.comment }}";
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
